// Code generated by protoc-gen-go. DO NOT EDIT.
// source: register.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterRequest struct {
	CommitteePublicKey   string   `protobuf:"bytes,1,opt,name=CommitteePublicKey,proto3" json:"CommitteePublicKey,omitempty"`
	WantedMessages       []string `protobuf:"bytes,2,rep,name=WantedMessages,proto3" json:"WantedMessages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1303fe8288f4efb6, []int{0}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetCommitteePublicKey() string {
	if m != nil {
		return m.CommitteePublicKey
	}
	return ""
}

func (m *RegisterRequest) GetWantedMessages() []string {
	if m != nil {
		return m.WantedMessages
	}
	return nil
}

type RegisterResponse struct {
	Pair                 []*MessageTopicPair `protobuf:"bytes,1,rep,name=Pair,proto3" json:"Pair,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1303fe8288f4efb6, []int{1}
}

func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetPair() []*MessageTopicPair {
	if m != nil {
		return m.Pair
	}
	return nil
}

type MessageTopicPair struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Topic                string   `protobuf:"bytes,2,opt,name=Topic,proto3" json:"Topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageTopicPair) Reset()         { *m = MessageTopicPair{} }
func (m *MessageTopicPair) String() string { return proto.CompactTextString(m) }
func (*MessageTopicPair) ProtoMessage()    {}
func (*MessageTopicPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_1303fe8288f4efb6, []int{2}
}

func (m *MessageTopicPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageTopicPair.Unmarshal(m, b)
}
func (m *MessageTopicPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageTopicPair.Marshal(b, m, deterministic)
}
func (m *MessageTopicPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageTopicPair.Merge(m, src)
}
func (m *MessageTopicPair) XXX_Size() int {
	return xxx_messageInfo_MessageTopicPair.Size(m)
}
func (m *MessageTopicPair) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageTopicPair.DiscardUnknown(m)
}

var xxx_messageInfo_MessageTopicPair proto.InternalMessageInfo

func (m *MessageTopicPair) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MessageTopicPair) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterRequest)(nil), "msg.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "msg.RegisterResponse")
	proto.RegisterType((*MessageTopicPair)(nil), "msg.MessageTopicPair")
}

func init() { proto.RegisterFile("register.proto", fileDescriptor_1303fe8288f4efb6) }

var fileDescriptor_1303fe8288f4efb6 = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4a, 0x4d, 0xcf,
	0x2c, 0x2e, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xce, 0x2d, 0x4e, 0x57,
	0xca, 0xe4, 0xe2, 0x0f, 0x82, 0x0a, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xe9, 0x71,
	0x09, 0x39, 0xe7, 0xe7, 0xe6, 0x66, 0x96, 0x94, 0xa4, 0xa6, 0x06, 0x94, 0x26, 0xe5, 0x64, 0x26,
	0x7b, 0xa7, 0x56, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x61, 0x91, 0x11, 0x52, 0xe3, 0xe2,
	0x0b, 0x4f, 0xcc, 0x2b, 0x49, 0x4d, 0xf1, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x2d, 0x96, 0x60,
	0x52, 0x60, 0xd6, 0xe0, 0x0c, 0x42, 0x13, 0x55, 0xb2, 0xe5, 0x12, 0x40, 0x58, 0x55, 0x5c, 0x90,
	0x9f, 0x57, 0x9c, 0x2a, 0xa4, 0xc9, 0xc5, 0x12, 0x90, 0x98, 0x59, 0x24, 0xc1, 0xa8, 0xc0, 0xac,
	0xc1, 0x6d, 0x24, 0xaa, 0x97, 0x5b, 0x9c, 0xae, 0x07, 0xd5, 0x10, 0x92, 0x5f, 0x90, 0x99, 0x0c,
	0x92, 0x0c, 0x02, 0x2b, 0x51, 0x72, 0xe2, 0x12, 0x40, 0x97, 0x11, 0x92, 0xe0, 0x62, 0x87, 0x8a,
	0x41, 0xdd, 0x07, 0xe3, 0x0a, 0x89, 0x70, 0xb1, 0x82, 0x95, 0x49, 0x30, 0x81, 0xc5, 0x21, 0x1c,
	0x27, 0xd6, 0x28, 0x90, 0xa7, 0x93, 0xd8, 0xc0, 0x01, 0x60, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0xf0, 0x4f, 0xaa, 0xc3, 0x12, 0x01, 0x00, 0x00,
}
